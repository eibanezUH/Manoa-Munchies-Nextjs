// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
  VENDOR
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  role           Role      @default(USER)
  createdAt      DateTime  @default(now()) 
  updatedAt      DateTime  @updatedAt
  foodPreferences String[]  // Array of food preferences (e.g., ['Vegetarian', 'Gluten-Free'])
  foodAversions   String[]  // Array of food aversions (e.g., ['Peanuts', 'Shellfish'])
  vendorId       Int?      @unique // Links to Vendor (one-to-one)
  vendor         Vendor?   @relation(fields: [vendorId], references: [id])
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition @default(good)
  owner     String
}

model Vendor {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  phoneNumber String?
  address     String?
  menuItems   MenuItem[]
  user        User?     @relation // Links back to User (one-to-one)
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    String
  vendorId    Int
  vendor      Vendor   @relation(fields: [vendorId], references: [id])
}